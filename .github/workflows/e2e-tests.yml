name: Full Stack E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  full-stack-e2e:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install backend dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
        npx playwright install --with-deps
    
    - name: Start backend server
      run: |
        cd backend
        nohup uvicorn main:app --host 0.0.0.0 --port 8000 > backend.log 2>&1 &
        echo $! > backend.pid
        sleep 5
        echo "Backend server started"
        
    - name: Wait for backend to be ready
      run: |
        timeout 30s bash -c 'until curl -f http://localhost:8000/health 2>/dev/null; do echo "Waiting for backend..."; sleep 2; done' || echo "Backend health check failed, continuing..."
    
    - name: Start frontend server
      run: |
        cd frontend
        nohup npm run dev > frontend.log 2>&1 &
        echo $! > frontend.pid
        sleep 10
        echo "Frontend server started"
        
    - name: Wait for frontend to be ready
      run: |
        timeout 30s bash -c 'until curl -f http://localhost:5173 2>/dev/null; do echo "Waiting for frontend..."; sleep 2; done'
    
    - name: Run full stack E2E tests
      run: |
        cd frontend
        npm run test:e2e
      env:
        CI: true
        TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
        TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
    
    - name: Debug logs on failure
      if: failure()
      run: |
        echo "=== Backend logs ==="
        cd backend && cat backend.log || echo "No backend logs"
        echo "=== Frontend logs ==="
        cd frontend && cat frontend.log || echo "No frontend logs"
        echo "=== Process status ==="
        ps aux | grep -E "(uvicorn|node|vite)" || echo "No relevant processes"
        echo "=== Network status ==="
        netstat -tlnp || echo "netstat failed"
    
    - name: Stop servers
      if: always()
      run: |
        # Stop frontend
        if [ -f frontend/frontend.pid ]; then
          kill $(cat frontend/frontend.pid) || echo "Frontend already stopped"
        fi
        # Stop backend  
        if [ -f backend/backend.pid ]; then
          kill $(cat backend/backend.pid) || echo "Backend already stopped"
        fi
        # Kill any remaining processes
        pkill -f "uvicorn main:app" || echo "No uvicorn processes"
        pkill -f "vite" || echo "No vite processes"
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: full-stack-e2e-results
        path: |
          frontend/playwright-report/
          frontend/test-results/
          backend/backend.log
          frontend/frontend.log
        retention-days: 30